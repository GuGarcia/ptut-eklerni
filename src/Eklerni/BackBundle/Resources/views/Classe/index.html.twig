{% extends "EklerniBackBundle:Template:template.html.twig" %}

{% if classe.eleves|length > 0 %}
    {% set elevesTable %}
        <table class="table">
            {% for eleve in classe.eleves %}
                <tr>
                    <td class="col-lg-2">
                        <div class="img-crop img-xs" style="background-image:url('{{ asset(eleve.picture) }}')"></div>
                    </td>
                    <td class="col-lg-10">
                        <a href="{{ path("eklerni_back_eleve_fiche", {idEleve:eleve.id}) }}">{{ eleve.nom }} {{ eleve.prenom }}</a>
                    </td>
                </tr>
            {% endfor %}
        </table>
    {% endset %}
{% else %}
    {% set elevesTable %}
        {% trans %}classe.no.eleve{% endtrans %}
    {% endset %}
{% endif %}
{% set footereleves %}
    <a href="{{ path("eklerni_back_eleve_ajouter", {idClasse:classe.id}) }}" class="btn btn-primary">{% trans %}btn.eleve.add{% endtrans %}</a>
{% endset %}

{% set profsTable %}
<table class="table" id="profs">
    {% for prof in classe.enseignants %}
        <tr id="{{ prof.id }}">
            <td>
                {% if prof.id != app.user.id %}
                    <a href="#" title="{% trans %}utils.delete{% endtrans %}" class="delete right block">
                        <button class="btn btn-danger btn-xs"><i class="fa fa-times"></i></button>
                    </a>
                    <span>{{ prof.nom }} {{ prof.prenom }}</span>
                {% else %}
                    <span style="margin-left: 24px;">{{ prof.nom }} {{ prof.prenom }}</span>
                {% endif %}
            </td>
        </tr>
    {% endfor %}
</table>
{% endset %}
{% set footerprofs %}
<div class="input-group">
    <select id="add_prof" class="form-control">
        <option value=""></option>
        {% for prof in enseignants %}
            <option value="{{ prof.id }}">{{ prof.nom }} {{ prof.prenom }}</option>
        {% endfor %}
    </select>

    <div class="input-group-btn">
        <a href="" id="add_prof_link" class="btn btn-primary" disabled="disabled"><i class="fa fa-plus"></i></a>
    </div>
</div>
{% endset %}

{% set matieresTables %}
<table class="table" id="matieres">
    {% for matiere in matieres %}
        <tr id="{{ matiere.id }}" class="{% if matiere in classe.matieres %}bg-success{% else %}bg-danger{% endif %}" style="cursor: pointer;">
            <td>{{ matiere.name }}</td>
        </tr>
    {% endfor %}
</table>
{% endset %}
{% set footermatieres %}
<a href="#" id="matieres_link" class="btn btn-primary">{% trans %}utils.save{% endtrans %}</a>
{% endset %}

{% set worstsBody %}
<table class="table table-bordered">
    <tr>
        <th>Nom</th>
        <th class="col-md-6"></th>
        <th>note</th>
    </tr>
    {% for resultat in worsts %}
        {% set note = resultat["note"] %}
        {% set eleve = resultat[0].eleve %}
        {% if note < 25 %}
            {% set typebar = "danger" %}
            {% set typecolor = "red" %}
        {% elseif note < 50 %}
            {% set typebar = "warning" %}
            {% set typecolor = "orange" %}
        {% elseif note < 75 %}
            {% set typebar = "primary" %}
            {% set typecolor = "light-blue" %}
        {% else %}
            {% set typebar = "success" %}
            {% set typecolor = "green" %}
        {% endif %}
        <tr>
            <td>
                <a href="{{ path("eklerni_back_eleve_fiche", {idEleve:eleve.id}) }}">
                    {{ eleve.prenom }} {{ eleve.nom }}
                </a>
            </td>
            <td>
                <div class="progress xs">
                    <div class="progress-bar progress-bar-{{ typebar }}" style="width: {{ note|number_format }}%;"></div>
                </div>
            </td>
            <td>
                <span class="badge bg-{{ typecolor }}">{{ note|number_format }}%</span>
            </td>
        </tr>
    {% endfor %}
</table>
{% endset %}
{% set bestsBody %}
<table class="table table-bordered">
    <tr>
        <th>Nom</th>
        <th class="col-md-6"></th>
        <th>note</th>
    </tr>
    {% for resultat in bests %}
        {% set note = resultat["note"] %}
        {% set eleve = resultat[0].eleve %}
        {% if note < 25 %}
            {% set typebar = "danger" %}
            {% set typecolor = "red" %}
        {% elseif note < 50 %}
            {% set typebar = "warning" %}
            {% set typecolor = "orange" %}
        {% elseif note < 75 %}
            {% set typebar = "primary" %}
            {% set typecolor = "light-blue" %}
        {% else %}
            {% set typebar = "success" %}
            {% set typecolor = "green" %}
        {% endif %}
        <tr>
            <td>
                <a href="{{ path("eklerni_back_eleve_fiche", {idEleve:eleve.id}) }}">
                    {{ eleve.prenom }} {{ eleve.nom }}
                </a>
            </td>
            <td>
                <div class="progress xs">
                    <div class="progress-bar progress-bar-{{ typebar }}" style="width: {{ note|number_format }}%;"></div>
                </div>
            </td>
            <td>
                <span class="badge bg-{{ typecolor }}">{{ note|number_format }}%</span>
            </td>
        </tr>
    {% endfor %}
</table>
{% endset %}

{% if moyennes|length > 0 %}
    {% if moyennes|length %}
        {% set moyennesbody %}
        <div id="moyennes" style="min-width: 310px; max-width: 400px; height: 400px; margin: 0 auto"></div>
        {% endset %}
    {% else %}
        {% set moyennesbody %}
        {% trans %}eleve.noteinsuffisante{% endtrans %}
        {% endset %}
    {% endif %}
{% else %}
    {% set moyennesbody %}
    {% trans %}eleve.no.note{% endtrans %}
    {% endset %}
{% endif %}

{% block body %}
    <div class="row">
        <div class="col-md-4">
            {% set eleveList %}
            {% trans %}eleve.list{% endtrans %}
            {% endset %}
            {{ eklerni.block(eleveList, elevesTable, footereleves, "primary") }}
        </div>
        <div class="col-md-4">
            {% set enseignantList %}
            {% trans %}enseignant.list{% endtrans %}
            {% endset %}
            {{ eklerni.block(enseignantList, profsTable, footerprofs, "primary") }}
            {% set matiereText %}
            {% trans %}matiere.text{% endtrans %}
            {% endset %}
            {{ eklerni.block(matiereText, matieresTables, footermatieres, "primary") }}
            {% set moyenneText %}
            {% trans %}moyenne.text{% endtrans %}
            {% endset %}
            {{ eklerni.block(moyenneText, moyennesbody, "", "primary") }}

        </div>
        <div class="col-md-4">
            {{ eklerni.block("Liste des Meilleurs Élèves", bestsBody, "", "success") }}
            {{ eklerni.block("Liste des moins bons Élèves", worstsBody, "", "danger") }}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script type="application/javascript">
        $(document).ready(function () {
            init();
            var matieres = [];
            var notes = [];
            {% for moyenne in moyennes %}
            matieres[{{ (loop.index0/moyennes|length) * 360 }}] = "{{ moyenne[0].serie.activite.matiere.name }}";
            notes.push({{ moyenne["note"]|number_format }});
            {% endfor %}
console.log(notes);
            $('#moyennes').highcharts({
                chart: {
                    polar: true
                },
                title: {
                    text: '{% trans %}stats.moyenne.classe{% endtrans %}'
                },
                pane: {
                    startAngle: 0,
                    endAngle: 360
                },
                xAxis: {
                    tickInterval: {{ (360 / moyennes|length)|number_format  }},
                    min: 0,
                    max: 360,
                    labels: {
                        formatter: function () {
                            return matieres[this.value];
                        },
                        overflow: 'justify'
                    }
                },
                yAxis: {
                    min: 0,
                    max: 100
                },
                plotOptions: {
                    series: {
                        pointStart: 0,
                        pointInterval: {{ (360 / moyennes|length)|number_format  }}
                    },
                    column: {
                        pointPadding: 0,
                        groupPadding: 0
                    }
                },
                series: [
                    {
                        type: 'area',
                        name: '{{ classe.nom }}',
                        data: notes
                    }
                ]
            });
        });

        function init() {

            $("#add_prof").off("change");
            $("#add_prof").on("change", function () {
                if ($(this).val() == "") {
                    $("#add_prof_link").attr("disabled", "disabled");
                } else {
                    $("#add_prof_link").removeAttr("disabled");
                }
            });

            $("#add_prof_link").off("click");
            $("#add_prof_link").on("click", function (event) {
                event.preventDefault();
                var _this = this;

                $.ajax({
                    type: "POST",
                    url: "{{ path("eklerni_back_classe_ajax_add_enseignant", {idClasse:classe.id}) }}",
                    data: { idEnseignant: $("#add_prof").val() },
                    dataType: "json"
                }).success(function (data) {
                    if (data.success) {
                        $("#profs").append("<tr id='" + $("#add_prof").val() + "'><td>" +
                                "<a href=\"\" title=\"Supprimer\" class=\"delete right block\"><button class=\"btn btn-danger btn-xs\"><i class=\"fa fa-times\"></i></button></a>" +
                                "<span style='margin-left: 5px'>" + $("#add_prof option:selected").text() + "</span></td></tr>");
                        $("#add_prof option:selected").remove();

                        displayMessage("success", data.message);

                        $("#add_prof").val("");
                        $("#add_prof_link").attr("disabled", "disabled");
                        init();
                    } else {
                        displayMessage("danger", data.message);
                    }
                });
            });

            $("#matieres tr").off("click");
            $("#matieres tr").on("click", function () {
                $(this).toggleClass("bg-danger");
                $(this).toggleClass("bg-success");
            });

            $("#matieres_link").off("click");
            $("#matieres_link").on("click", function (event) {
                event.preventDefault();
                var matieres = [];
                $("#matieres tr.bg-success").each(function () {
                    matieres.push(this.id);
                });

                $.ajax({
                    type: "POST",
                    url: "{{ path("eklerni_back_classe_ajax_save_matieres", {idClasse: classe.id}) }}",
                    data: {"matieres": matieres},
                    dataType: "json"
                }).success(function (data) {
                    if (data.success) {
                        displayMessage("success", data.message);
                    } else {
                        displayMessage("danger", data.message);
                    }
                });
            });

            $("a.delete").off("click");
            $("a.delete").on("click", function (event) {
                event.preventDefault();
                var _this = this;
                var profs = [];
                $("#profs tr").each(function () {
                    if ($(_this).parent().parent().attr("id") != this.id) {
                        profs.push(this.id);
                    }
                });

                $.ajax({
                    type: "POST",
                    url: "{{ path("eklerni_back_classe_ajax_delete_enseignant", {idClasse: classe.id}) }}",
                    data: {"profs": profs},
                    dataType: "json"
                }).success(function (data) {
                    if (data.success) {
                        displayMessage("success", data.message);
                        $(_this).parent().parent().remove();
                    } else {
                        displayMessage("danger", data.message);
                    }
                });

            });
        }
    </script>
{% endblock %}